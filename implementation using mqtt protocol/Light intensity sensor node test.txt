#include <WiFi.h>
#include <PubSubClient.h>
#include <Wire.h>
#include <BH1750.h> // Include the BH1750 library

// WiFi credentials
const char* ssid = "XSM (2)";
const char* password = "12345678";

// MQTT broker details
const char* mqtt_server = "172.20.10.2";
const int mqtt_port = 1883;
const char* mqtt_topic = "sensor/light";

// Create instances of WiFi and MQTT clients
WiFiClient espClient;
PubSubClient client(espClient);
BH1750 lightMeter; // Create an instance of the BH1750

void setup() {
  Serial.begin(115200);
  delay(10);
  
  // Initialize the BH1750 sensor
  Wire.begin();
  if (lightMeter.begin(BH1750::CONTINUOUS_HIGH_RES_MODE)) {
    Serial.println(F("BH1750 sensor initialized successfully"));
  } else {
    Serial.println(F("Failed to initialize BH1750 sensor"));
  }
  
  // Connect to WiFi
  setup_wifi();
  
  // Set MQTT server and callback
  client.setServer(mqtt_server, mqtt_port);
}

void setup_wifi() {
  delay(10);
  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);
  
  WiFi.begin(ssid, password);
  
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  
  Serial.println("");
  Serial.println("WiFi connected");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());
}

void reconnect() {
  // Loop until we're reconnected
  while (!client.connected()) {
    Serial.print("Attempting MQTT connection...");
    
    // Attempt to connect
    if (client.connect("ESP32Client")) {
      Serial.println("connected");
    } else {
      Serial.print("failed, rc=");
      Serial.print(client.state());
      Serial.println(" try again in 5 seconds");
      
      // Wait 5 seconds before retrying
      delay(5000);
    }
  }
}

void loop() {
  if (!client.connected()) {
    reconnect();
  }
  client.loop();
  
  // Read light intensity value
  float lux = lightMeter.readLightLevel();
  
  // Check if the reading is valid
  if (lux < 0) {
    Serial.println("Failed to read from BH1750 sensor!");
    return;
  }
  
  // Create a JSON-like string for the light intensity
  String json = "{\"light_intensity\":";
  json += lux;
  json += "}";
  
  // Publish JSON to MQTT
  client.publish(mqtt_topic, json.c_str());
  
  // Print the JSON for debugging
  Serial.print("Published data: ");
  Serial.println(json);
  
  // Wait 10 seconds before next read
  delay(10000);
}

